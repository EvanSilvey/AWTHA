{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BluerayDestroyer6969\\\\Desktop\\\\awtha\\\\movie-list-ranking\\\\src\\\\Components\\\\Lists.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server_url = 'http://localhost:11037';\nfunction Lists(props) {\n  _s();\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    // Define an async function to fetch the lists\n    const fetchLists = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const response = await fetch(server_url + '/lists', options);\n        const data = await response.json();\n        setLists(data); // Update the state with the fetched lists\n      } catch (error) {\n        console.error('Error fetching lists:', error);\n      }\n    };\n\n    // Call the fetchLists function to fetch the lists\n    fetchLists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), lists.map((list, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: list.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: list.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: list.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: props.movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Lists, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n_c = Lists;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","useState","useEffect","List","jsxDEV","_jsxDEV","server_url","Lists","props","_s","lists","setLists","fetchLists","options","method","headers","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","list","index","title","text","username","items","movies","_c","$RefreshReg$"],"sources":["C:/Users/BluerayDestroyer6969/Desktop/awtha/movie-list-ranking/src/Components/Lists.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport List from \"./List\";\r\n\r\nconst server_url = 'http://localhost:11037';\r\n\r\nfunction Lists(props) {\r\n    const [lists, setLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Define an async function to fetch the lists\r\n        const fetchLists = async () => {\r\n            try {\r\n                const options = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }\r\n                const response = await fetch(server_url + '/lists', options);\r\n                const data = await response.json();\r\n                setLists(data); // Update the state with the fetched lists\r\n            } catch (error) {\r\n                console.error('Error fetching lists:', error);\r\n            }\r\n        };\r\n\r\n        // Call the fetchLists function to fetch the lists\r\n        fetchLists();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <h1>User Lists</h1>\r\n\r\n            <div className=\"lists-container\">\r\n                <table>\r\n                    <tr>\r\n                        <th>List</th>\r\n                        <th>Description</th>\r\n                        <th>Created By</th>\r\n                    </tr>\r\n                    {lists.map((list, index)=> (\r\n                        <tr>\r\n                            <td><h1>{list.title}</h1></td>\r\n                            <td><h3>{list.text}</h3></td>\r\n                            <td><p>{list.username}</p></td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n\r\n            <List items={props.movies} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}