{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BluerayDestroyer6969\\\\Desktop\\\\awtha\\\\movie-list-ranking\\\\src\\\\Components\\\\Lists.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport List from \"./List\";\nimport { Route, Routes, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server_url = 'http://localhost:11037';\nfunction ListDetails(props) {\n  _s();\n  const {\n    title\n  } = useParams(); // Get the list title from the URL params\n  const list = props.lists.find(list => list.title === title); // Find the corresponding list based on the title\n\n  if (!list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"List not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: list.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created By: \", list.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(ListDetails, \"gF8BQ7pbS2fZBw1FFV94ESvKwxQ=\", true);\n_c = ListDetails;\nfunction Lists(props) {\n  _s2();\n  useEffect(() => {\n    // Define an async function to fetch the lists\n    const fetchLists = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const response = await fetch(server_url + '/lists', options);\n        const data = await response.json();\n        props.setLists(data); // Update the state with the fetched lists\n      } catch (error) {\n        console.error('Error fetching lists:', error);\n      }\n    };\n\n    // Call the fetchLists function to fetch the lists\n    fetchLists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\",\n      children: \"Live User Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: '/lists/:title',\n        element: /*#__PURE__*/_jsxDEV(ListDetails, {\n          lists: props.lists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), props.lists.map((list, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/lists/\" + list.title,\n              className: \"black-text\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: list.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: list.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: list.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: props.movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s2(Lists, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Lists;\nexport default Lists;\nvar _c, _c2;\n$RefreshReg$(_c, \"ListDetails\");\n$RefreshReg$(_c2, \"Lists\");","map":{"version":3,"names":["React","useEffect","List","Route","Routes","Link","jsxDEV","_jsxDEV","server_url","ListDetails","props","_s","title","useParams","list","lists","find","children","fileName","_jsxFileName","lineNumber","columnNumber","text","username","_c","Lists","_s2","fetchLists","options","method","headers","response","fetch","data","json","setLists","error","console","className","path","element","map","index","to","items","movies","_c2","$RefreshReg$"],"sources":["C:/Users/BluerayDestroyer6969/Desktop/awtha/movie-list-ranking/src/Components/Lists.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport List from \"./List\";\r\nimport { Route, Routes, Link } from 'react-router-dom';\r\n\r\nconst server_url = 'http://localhost:11037';\r\n\r\nfunction ListDetails(props) {\r\n    const { title } = useParams(); // Get the list title from the URL params\r\n    const list = props.lists.find(list => list.title === title); // Find the corresponding list based on the title\r\n\r\n    if (!list) {\r\n        return <div>List not found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{list.title}</h1>\r\n            <h3>{list.text}</h3>\r\n            <p>Created By: {list.username}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Lists(props) {\r\n\r\n    useEffect(() => {\r\n        // Define an async function to fetch the lists\r\n        const fetchLists = async () => {\r\n            try {\r\n                const options = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }\r\n                const response = await fetch(server_url + '/lists', options);\r\n                const data = await response.json();\r\n                props.setLists(data); // Update the state with the fetched lists\r\n            } catch (error) {\r\n                console.error('Error fetching lists:', error);\r\n            }\r\n        };\r\n\r\n        // Call the fetchLists function to fetch the lists\r\n        fetchLists();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <h1 className=\"\">Live User Lists</h1>\r\n            \r\n            <Routes>\r\n                <Route path={'/lists/:title'} element={<ListDetails lists={props.lists} />}/>\r\n            </Routes>\r\n            \r\n\r\n            <div className=\"lists-container\">\r\n                <table>\r\n                    <tr>\r\n                        <th>List</th>\r\n                        <th>Description</th>\r\n                        <th>Created By</th>\r\n                    </tr>\r\n                    {props.lists.map((list, index)=> (\r\n                        <tr key={index}>\r\n                            <td><Link to={\"/lists/\" + list.title} className=\"black-text\"><h1>{list.title}</h1></Link></td>\r\n                            <td><h3>{list.text}</h3></td>\r\n                            <td><p>{list.username}</p></td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n\r\n            <List items={props.movies} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAG,wBAAwB;AAE3C,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAMC,IAAI,GAAGJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACF,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC;;EAE7D,IAAI,CAACE,IAAI,EAAE;IACP,oBAAOP,OAAA;MAAAU,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEA,oBACId,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAKH,IAAI,CAACF;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBd,OAAA;MAAAU,QAAA,EAAKH,IAAI,CAACQ;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBd,OAAA;MAAAU,QAAA,GAAG,cAAY,EAACH,IAAI,CAACS,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd;AAACV,EAAA,CAfQF,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAiBpB,SAASgB,KAAKA,CAACf,KAAK,EAAE;EAAAgB,GAAA;EAElBzB,SAAS,CAAC,MAAM;IACZ;IACA,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,OAAO,GAAG;UACZC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC;QACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACxB,UAAU,GAAG,QAAQ,EAAEoB,OAAO,CAAC;QAC5D,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCxB,KAAK,CAACyB,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;;IAED;IACAT,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAK+B,SAAS,EAAC,UAAU;IAAArB,QAAA,gBACrBV,OAAA;MAAI+B,SAAS,EAAC,EAAE;MAAArB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErCd,OAAA,CAACH,MAAM;MAAAa,QAAA,eACHV,OAAA,CAACJ,KAAK;QAACoC,IAAI,EAAE,eAAgB;QAACC,OAAO,eAAEjC,OAAA,CAACE,WAAW;UAACM,KAAK,EAAEL,KAAK,CAACK;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAGTd,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAArB,QAAA,eAC5BV,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAAU,QAAA,gBACIV,OAAA;YAAAU,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbd,OAAA;YAAAU,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBd,OAAA;YAAAU,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EACJX,KAAK,CAACK,KAAK,CAAC0B,GAAG,CAAC,CAAC3B,IAAI,EAAE4B,KAAK,kBACzBnC,OAAA;UAAAU,QAAA,gBACIV,OAAA;YAAAU,QAAA,eAAIV,OAAA,CAACF,IAAI;cAACsC,EAAE,EAAE,SAAS,GAAG7B,IAAI,CAACF,KAAM;cAAC0B,SAAS,EAAC,YAAY;cAAArB,QAAA,eAACV,OAAA;gBAAAU,QAAA,EAAKH,IAAI,CAACF;cAAK;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9Fd,OAAA;YAAAU,QAAA,eAAIV,OAAA;cAAAU,QAAA,EAAKH,IAAI,CAACQ;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7Bd,OAAA;YAAAU,QAAA,eAAIV,OAAA;cAAAU,QAAA,EAAIH,IAAI,CAACS;YAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAH1BqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAENd,OAAA,CAACL,IAAI;MAAC0C,KAAK,EAAElC,KAAK,CAACmC;IAAO;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAACK,GAAA,CArDQD,KAAK;AAAAqB,GAAA,GAALrB,KAAK;AAuDd,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}