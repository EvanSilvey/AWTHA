{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BluerayDestroyer6969\\\\Desktop\\\\awtha\\\\movie-list-ranking\\\\src\\\\Components\\\\Lists.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lists(props) {\n  _s();\n  const [userLists, setUserLists] = useState([]);\n  const getListsRequest = async () => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"searchValue\": searchValue\n      })\n    };\n    const response = await fetch(server_url + '/query/movies', options);\n    const res = await response.json();\n    console.log(res);\n    if (res.Search) {\n      setMovies(res.Search);\n    }\n  };\n  useEffect(() => {\n    getListsRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: props.movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Lists, \"orrL6RKQ9u5nEMOiaVonTVkwmb4=\");\n_c = Lists;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","List","jsxDEV","_jsxDEV","Lists","props","_s","userLists","setUserLists","useState","getListsRequest","options","method","headers","body","JSON","stringify","searchValue","response","fetch","server_url","res","json","console","log","Search","setMovies","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","items","movies","_c","$RefreshReg$"],"sources":["C:/Users/BluerayDestroyer6969/Desktop/awtha/movie-list-ranking/src/Components/Lists.jsx"],"sourcesContent":["import React from 'react';\r\nimport List from \"./List\";\r\n\r\nfunction Lists(props) {\r\n    const [userLists, setUserLists] = useState([]);\r\n\r\n    const getListsRequest = async () => {\r\n        const options = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\"searchValue\": searchValue})\r\n        }\r\n        \r\n        const response = await fetch(server_url + '/query/movies', options);\r\n    \r\n        const res = await response.json();\r\n    \r\n        console.log(res);\r\n        \r\n        if (res.Search) {\r\n          setMovies(res.Search);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getListsRequest();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lists</h1>\r\n\r\n            <List items={props.movies} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,aAAa,EAAEC;MAAW,CAAC;IACnD,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,UAAU,GAAG,eAAe,EAAET,OAAO,CAAC;IAEnE,MAAMU,GAAG,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAEjCC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAEhB,IAAIA,GAAG,CAACI,MAAM,EAAE;MACdC,SAAS,CAACL,GAAG,CAACI,MAAM,CAAC;IACvB;EACJ,CAAC;EAEDE,SAAS,CAAC,MAAM;IACZjB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEd7B,OAAA,CAACF,IAAI;MAACgC,KAAK,EAAE5B,KAAK,CAAC6B;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAAC1B,EAAA,CAlCQF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}